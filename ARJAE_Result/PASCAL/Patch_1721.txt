1 Replace /home/amirfarhad/Desktop/ProgramAnalysis/codes/result_repair_tools/QuixBugs/ArjaeFramework/ARJAE/PASCAL/PASCAL/src/main/java/PASCAL/bug1/PASCAL.java 22
Faulty:
for (int c=0; c < r; c++) {
  int upleft, upright;
  if (c > 0) {
    upleft=rows.get(r - 1).get(c - 1);
  }
 else {
    upleft=0;
  }
  if (c < r) {
    upright=rows.get(r - 1).get(c);
  }
 else {
    upright=0;
  }
  row.add(upleft + upright);
}
Seed:
for (int c=0; c <= r; c++) {
  int upleft, upright;
  if (c > 0) {
    upleft=rows.get(r - 1).get(c - 1);
  }
 else {
    upleft=0;
  }
  if (c < r) {
    upright=rows.get(r - 1).get(c);
  }
 else {
    upright=0;
  }
  row.add(upleft + upright);
}
**************************************************
2 InsertBefore /home/amirfarhad/Desktop/ProgramAnalysis/codes/result_repair_tools/QuixBugs/ArjaeFramework/ARJAE/PASCAL/PASCAL/src/main/java/PASCAL/bug1/PASCAL.java 34
Faulty:
row.add(upleft + upright);
Seed:
for (int r=1; r < n; r++) {
  ArrayList<Integer> row=new ArrayList<Integer>();
  for (int c=0; c < r; c++) {
    int upleft, upright;
    if (c > 0) {
      upleft=rows.get(r - 1).get(c - 1);
    }
 else {
      upleft=0;
    }
    if (c < r) {
      upright=rows.get(r - 1).get(c);
    }
 else {
      upright=0;
    }
    row.add(upleft + upright);
  }
  rows.add(row);
}
**************************************************
3 Replace /home/amirfarhad/Desktop/ProgramAnalysis/codes/result_repair_tools/QuixBugs/ArjaeFramework/ARJAE/PASCAL/PASCAL/src/main/java/PASCAL/bug1/PASCAL.java 25
Faulty:
upleft=rows.get(r - 1).get(c - 1);
Seed:
upleft=rows.get(n - 1).get(c - 1);
**************************************************
Evaluations: 1402
EstimatedTime: 215636
